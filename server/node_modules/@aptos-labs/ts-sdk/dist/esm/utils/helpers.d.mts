/**
 * Sleep the current thread for the given amount of time
 * @param timeMs time in milliseconds to sleep
 */
declare function sleep(timeMs: number): Promise<null>;
declare const nowInSeconds: () => number;
declare function floorToWholeHour(timestampInSeconds: number): number;
declare function base64UrlDecode(base64Url: string): string;
/**
 * Amount is represented in the smallest unit format on chain, this function converts
 * a human readable amount format to the smallest unit format
 * @example
 * human readable amount format: 500
 * on chain amount format when decimal is 8: 50000000000
 *
 * @param value The value in human readable format
 * @param decimal The token decimal
 * @returns The value is smallest units
 */
declare const convertAmountFromHumanReadableToOnChain: (value: number, decimal: number) => number;
/**
 * Amount is represented in the smallest unit format on chain, this function converts
 * the smallest unit format to a human readable amount format
 * @example
 * human readable amount format: 500
 * on chain amount format when decimal is 8: 50000000000
 *
 * @param value The value in human readable format
 * @param decimal The token decimal
 * @returns The value is smallest units
 */
declare const convertAmountFromOnChainToHumanReadable: (value: number, decimal: number) => number;

export { base64UrlDecode, convertAmountFromHumanReadableToOnChain, convertAmountFromOnChainToHumanReadable, floorToWholeHour, nowInSeconds, sleep };
