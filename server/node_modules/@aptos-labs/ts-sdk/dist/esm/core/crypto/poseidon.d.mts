/**
 * Hashes a string to a field element via poseidon
 *
 * @returns bigint result of the hash
 */
declare function hashStrToField(str: string, maxSizeBytes: number): bigint;
declare function padAndPackBytesWithLen(bytes: Uint8Array, maxSizeBytes: number): bigint[];
declare function bytesToBigIntLE(bytes: Uint8Array): bigint;
declare function bigIntToBytesLE(value: bigint, length: number): Uint8Array;
/**
 * Hashes up to 16 scalar elements via the poseidon hashing algorithm.
 *
 * Each element must be scalar fields of the BN254 elliptic curve group.
 *
 * @returns bigint result of the hash
 */
declare function poseidonHash(inputs: (number | bigint | string)[]): bigint;

export { bigIntToBytesLE, bytesToBigIntLE, hashStrToField, padAndPackBytesWithLen, poseidonHash };
